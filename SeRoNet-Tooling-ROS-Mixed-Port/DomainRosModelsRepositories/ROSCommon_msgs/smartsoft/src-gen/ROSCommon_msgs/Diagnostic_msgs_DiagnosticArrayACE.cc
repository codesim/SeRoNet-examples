//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#include "ROSCommon_msgs/Diagnostic_msgs_DiagnosticArrayACE.hh"
#include <ace/SString.h>
#include "ROSCommon_msgs/Diagnostic_msgs_DiagnosticStatusACE.hh"
#include "ROSRos_core/Std_msgs_HeaderACE.hh"

// serialization operator for element Diagnostic_msgs_DiagnosticArray
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const ROSCommon_msgsIDL::Diagnostic_msgs_DiagnosticArray &data)
{
	ACE_CDR::Boolean good_bit = true;
	// serialize list-element header
	good_bit = good_bit && cdr << data.header;
	// serialize list-element status
	good_bit = good_bit && cdr << ACE_Utils::truncate_cast<ACE_CDR::ULong>(data.status.size());
	std::vector<ROSCommon_msgsIDL::Diagnostic_msgs_DiagnosticStatus>::const_iterator data_statusIt;
	for(data_statusIt=data.status.begin(); data_statusIt!=data.status.end(); data_statusIt++) {
		good_bit = good_bit && cdr << *data_statusIt;
	}
	
	return good_bit;
}

// de-serialization operator for element Diagnostic_msgs_DiagnosticArray
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, ROSCommon_msgsIDL::Diagnostic_msgs_DiagnosticArray &data)
{
	ACE_CDR::Boolean good_bit = true;
	// deserialize type element header
	good_bit = good_bit && cdr >> data.header;
	// deserialize list-type element status
	ACE_CDR::ULong data_statusNbr;
	good_bit = good_bit && cdr >> data_statusNbr;
	data.status.clear();
	ROSCommon_msgsIDL::Diagnostic_msgs_DiagnosticStatus data_statusItem;
	for(ACE_CDR::ULong i=0; i<data_statusNbr; ++i) {
		good_bit = good_bit && cdr >> data_statusItem;
		data.status.push_back(data_statusItem);
	}
	
	return good_bit;
}

// serialization operator for CommunicationObject Diagnostic_msgs_DiagnosticArray
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const ROSCommon_msgs::Diagnostic_msgs_DiagnosticArray &obj)
{
	return cdr << obj.get();
}

// de-serialization operator for CommunicationObject Diagnostic_msgs_DiagnosticArray
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, ROSCommon_msgs::Diagnostic_msgs_DiagnosticArray &obj)
{
	return cdr >> obj.set();
}
