//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#include "ROSCommon_msgs/Shape_msgs_MeshACE.hh"
#include <ace/SString.h>
#include "ROSCommon_msgs/Geometry_msgs_PointACE.hh"
#include "ROSCommon_msgs/Shape_msgs_MeshTriangleACE.hh"

// serialization operator for element Shape_msgs_Mesh
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const ROSCommon_msgsIDL::Shape_msgs_Mesh &data)
{
	ACE_CDR::Boolean good_bit = true;
	// serialize list-element triangles
	good_bit = good_bit && cdr << ACE_Utils::truncate_cast<ACE_CDR::ULong>(data.triangles.size());
	std::vector<ROSCommon_msgsIDL::Shape_msgs_MeshTriangle>::const_iterator data_trianglesIt;
	for(data_trianglesIt=data.triangles.begin(); data_trianglesIt!=data.triangles.end(); data_trianglesIt++) {
		good_bit = good_bit && cdr << *data_trianglesIt;
	}
	// serialize list-element vertices
	good_bit = good_bit && cdr << ACE_Utils::truncate_cast<ACE_CDR::ULong>(data.vertices.size());
	std::vector<ROSCommon_msgsIDL::Geometry_msgs_Point>::const_iterator data_verticesIt;
	for(data_verticesIt=data.vertices.begin(); data_verticesIt!=data.vertices.end(); data_verticesIt++) {
		good_bit = good_bit && cdr << *data_verticesIt;
	}
	
	return good_bit;
}

// de-serialization operator for element Shape_msgs_Mesh
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, ROSCommon_msgsIDL::Shape_msgs_Mesh &data)
{
	ACE_CDR::Boolean good_bit = true;
	// deserialize list-type element triangles
	ACE_CDR::ULong data_trianglesNbr;
	good_bit = good_bit && cdr >> data_trianglesNbr;
	data.triangles.clear();
	ROSCommon_msgsIDL::Shape_msgs_MeshTriangle data_trianglesItem;
	for(ACE_CDR::ULong i=0; i<data_trianglesNbr; ++i) {
		good_bit = good_bit && cdr >> data_trianglesItem;
		data.triangles.push_back(data_trianglesItem);
	}
	// deserialize list-type element vertices
	ACE_CDR::ULong data_verticesNbr;
	good_bit = good_bit && cdr >> data_verticesNbr;
	data.vertices.clear();
	ROSCommon_msgsIDL::Geometry_msgs_Point data_verticesItem;
	for(ACE_CDR::ULong i=0; i<data_verticesNbr; ++i) {
		good_bit = good_bit && cdr >> data_verticesItem;
		data.vertices.push_back(data_verticesItem);
	}
	
	return good_bit;
}

// serialization operator for CommunicationObject Shape_msgs_Mesh
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const ROSCommon_msgs::Shape_msgs_Mesh &obj)
{
	return cdr << obj.get();
}

// de-serialization operator for CommunicationObject Shape_msgs_Mesh
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, ROSCommon_msgs::Shape_msgs_Mesh &obj)
{
	return cdr >> obj.set();
}
