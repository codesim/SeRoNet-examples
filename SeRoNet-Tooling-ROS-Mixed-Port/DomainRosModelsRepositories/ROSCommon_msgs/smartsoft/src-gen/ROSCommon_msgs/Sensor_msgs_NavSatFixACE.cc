//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#include "ROSCommon_msgs/Sensor_msgs_NavSatFixACE.hh"
#include <ace/SString.h>
#include "ROSCommon_msgs/Sensor_msgs_NavSatStatusACE.hh"
#include "ROSRos_core/Std_msgs_HeaderACE.hh"

// serialization operator for element Sensor_msgs_NavSatFix
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const ROSCommon_msgsIDL::Sensor_msgs_NavSatFix &data)
{
	ACE_CDR::Boolean good_bit = true;
	// serialize list-element header
	good_bit = good_bit && cdr << data.header;
	// serialize list-element status
	good_bit = good_bit && cdr << data.status;
	// serialize list-element latitude
	good_bit = good_bit && cdr.write_double(data.latitude);
	// serialize list-element longitude
	good_bit = good_bit && cdr.write_double(data.longitude);
	// serialize list-element altitude
	good_bit = good_bit && cdr.write_double(data.altitude);
	// serialize list-element position_covariance
	good_bit = good_bit && cdr << ACE_Utils::truncate_cast<ACE_CDR::ULong>(data.position_covariance.size());
	good_bit = good_bit && cdr.write_double_array(data.position_covariance.data(), data.position_covariance.size());
	// serialize list-element position_covariance_type
	good_bit = good_bit && cdr.write_octet(data.position_covariance_type);
	
	return good_bit;
}

// de-serialization operator for element Sensor_msgs_NavSatFix
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, ROSCommon_msgsIDL::Sensor_msgs_NavSatFix &data)
{
	ACE_CDR::Boolean good_bit = true;
	// deserialize type element header
	good_bit = good_bit && cdr >> data.header;
	// deserialize type element status
	good_bit = good_bit && cdr >> data.status;
	// deserialize type element latitude
	good_bit = good_bit && cdr.read_double(data.latitude);
	// deserialize type element longitude
	good_bit = good_bit && cdr.read_double(data.longitude);
	// deserialize type element altitude
	good_bit = good_bit && cdr.read_double(data.altitude);
	// deserialize list-type element position_covariance
	ACE_CDR::ULong data_position_covarianceNbr;
	good_bit = good_bit && cdr >> data_position_covarianceNbr;
	data.position_covariance.resize(data_position_covarianceNbr);
	good_bit = good_bit && cdr.read_double_array(data.position_covariance.data(), data_position_covarianceNbr);
	// deserialize type element position_covariance_type
	good_bit = good_bit && cdr.read_octet(data.position_covariance_type);
	
	return good_bit;
}

// serialization operator for CommunicationObject Sensor_msgs_NavSatFix
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const ROSCommon_msgs::Sensor_msgs_NavSatFix &obj)
{
	return cdr << obj.get();
}

// de-serialization operator for CommunicationObject Sensor_msgs_NavSatFix
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, ROSCommon_msgs::Sensor_msgs_NavSatFix &obj)
{
	return cdr >> obj.set();
}
