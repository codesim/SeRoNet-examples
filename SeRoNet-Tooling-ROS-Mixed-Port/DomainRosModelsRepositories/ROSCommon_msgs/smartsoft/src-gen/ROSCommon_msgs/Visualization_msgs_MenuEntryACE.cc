//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#include "ROSCommon_msgs/Visualization_msgs_MenuEntryACE.hh"
#include <ace/SString.h>

// serialization operator for element Visualization_msgs_MenuEntry
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const ROSCommon_msgsIDL::Visualization_msgs_MenuEntry &data)
{
	ACE_CDR::Boolean good_bit = true;
	// serialize list-element id
	good_bit = good_bit && cdr.write_ulong(data.id);
	// serialize list-element parent_id
	good_bit = good_bit && cdr.write_ulong(data.parent_id);
	// serialize list-element title
	good_bit = good_bit && cdr << ACE_CString(data.title.c_str());
	// serialize list-element command
	good_bit = good_bit && cdr << ACE_CString(data.command.c_str());
	// serialize list-element command_type
	good_bit = good_bit && cdr.write_octet(data.command_type);
	
	return good_bit;
}

// de-serialization operator for element Visualization_msgs_MenuEntry
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, ROSCommon_msgsIDL::Visualization_msgs_MenuEntry &data)
{
	ACE_CDR::Boolean good_bit = true;
	// deserialize type element id
	good_bit = good_bit && cdr.read_ulong(data.id);
	// deserialize type element parent_id
	good_bit = good_bit && cdr.read_ulong(data.parent_id);
	// deserialize string-type element title
	ACE_CString data_title_str;
	good_bit = good_bit && cdr >> data_title_str;
	data.title = data_title_str.c_str();
	// deserialize string-type element command
	ACE_CString data_command_str;
	good_bit = good_bit && cdr >> data_command_str;
	data.command = data_command_str.c_str();
	// deserialize type element command_type
	good_bit = good_bit && cdr.read_octet(data.command_type);
	
	return good_bit;
}

// serialization operator for CommunicationObject Visualization_msgs_MenuEntry
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const ROSCommon_msgs::Visualization_msgs_MenuEntry &obj)
{
	return cdr << obj.get();
}

// de-serialization operator for CommunicationObject Visualization_msgs_MenuEntry
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, ROSCommon_msgs::Visualization_msgs_MenuEntry &obj)
{
	return cdr >> obj.set();
}
