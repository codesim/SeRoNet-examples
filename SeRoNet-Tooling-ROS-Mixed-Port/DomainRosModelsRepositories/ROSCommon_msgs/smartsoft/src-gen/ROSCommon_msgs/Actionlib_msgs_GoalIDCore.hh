//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#ifndef ROSCOMMON_MSGS_ACTIONLIB_MSGS_GOALID_CORE_H_
#define ROSCOMMON_MSGS_ACTIONLIB_MSGS_GOALID_CORE_H_

#include "ROSCommon_msgs/Actionlib_msgs_GoalIDData.hh"
#include "CommBasicObjects/CommTimeStamp.hh"

#include <iostream>
#include <string>
#include <list>

namespace ROSCommon_msgs {
	
class Actionlib_msgs_GoalIDCore {
protected:
	// data structure
	ROSCommon_msgsIDL::Actionlib_msgs_GoalID idl_Actionlib_msgs_GoalID;
	
public:
	// give a publicly accessible type-name for the template parameter IDL
	typedef ROSCommon_msgsIDL::Actionlib_msgs_GoalID DATATYPE;
	
	#ifdef ENABLE_HASH
		static size_t generateDataHash(const DATATYPE &);
	#endif
	
	static const char* getCompiledHash();
	static void getAllHashValues(std::list<std::string> &hashes);
	static void checkAllHashValues(std::list<std::string> &hashes);
	
	// default constructors
	Actionlib_msgs_GoalIDCore();
	Actionlib_msgs_GoalIDCore(const DATATYPE &data);
	// default destructor
	virtual ~Actionlib_msgs_GoalIDCore();
	
	const DATATYPE& get() const { return idl_Actionlib_msgs_GoalID; }
	operator const DATATYPE&() const { return idl_Actionlib_msgs_GoalID; }
	DATATYPE& set() { return idl_Actionlib_msgs_GoalID; }

	static inline std::string identifier(void) { return "ROSCommon_msgs::Actionlib_msgs_GoalID"; }
	
	// helper method to easily implement output stream in derived classes
	void to_ostream(std::ostream &os = std::cout) const;
	
	// convert to xml stream
	void to_xml(std::ostream &os, const std::string &indent = "") const;
	
	// restore from xml stream
	void from_xml(std::istream &is);
	
	// User Interface
	
	// getter and setter for element Stamp
	inline CommBasicObjects::CommTimeStamp getStamp() const { return CommBasicObjects::CommTimeStamp(idl_Actionlib_msgs_GoalID.stamp); }
	inline Actionlib_msgs_GoalIDCore& setStamp(const CommBasicObjects::CommTimeStamp &stamp) { idl_Actionlib_msgs_GoalID.stamp = stamp; return *this; }
	
	// getter and setter for element Id
	inline std::string getId() const { return idl_Actionlib_msgs_GoalID.id; }
	inline Actionlib_msgs_GoalIDCore& setId(const std::string &id) { idl_Actionlib_msgs_GoalID.id = id; return *this; }
};

} /* namespace ROSCommon_msgs */
#endif /* ROSCOMMON_MSGS_ACTIONLIB_MSGS_GOALID_CORE_H_ */
