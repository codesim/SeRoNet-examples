//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#ifndef ROSCOMMON_MSGS_SENSOR_MSGS_JOYFEEDBACK_CORE_H_
#define ROSCOMMON_MSGS_SENSOR_MSGS_JOYFEEDBACK_CORE_H_

#include "ROSCommon_msgs/Sensor_msgs_JoyFeedbackData.hh"

#include <iostream>
#include <string>
#include <list>

namespace ROSCommon_msgs {
	
class Sensor_msgs_JoyFeedbackCore {
protected:
	// data structure
	ROSCommon_msgsIDL::Sensor_msgs_JoyFeedback idl_Sensor_msgs_JoyFeedback;
	
public:
	// give a publicly accessible type-name for the template parameter IDL
	typedef ROSCommon_msgsIDL::Sensor_msgs_JoyFeedback DATATYPE;
	
	#ifdef ENABLE_HASH
		static size_t generateDataHash(const DATATYPE &);
	#endif
	
	static const char* getCompiledHash();
	static void getAllHashValues(std::list<std::string> &hashes);
	static void checkAllHashValues(std::list<std::string> &hashes);
	
	// default constructors
	Sensor_msgs_JoyFeedbackCore();
	Sensor_msgs_JoyFeedbackCore(const DATATYPE &data);
	// default destructor
	virtual ~Sensor_msgs_JoyFeedbackCore();
	
	const DATATYPE& get() const { return idl_Sensor_msgs_JoyFeedback; }
	operator const DATATYPE&() const { return idl_Sensor_msgs_JoyFeedback; }
	DATATYPE& set() { return idl_Sensor_msgs_JoyFeedback; }

	static inline std::string identifier(void) { return "ROSCommon_msgs::Sensor_msgs_JoyFeedback"; }
	
	// helper method to easily implement output stream in derived classes
	void to_ostream(std::ostream &os = std::cout) const;
	
	// convert to xml stream
	void to_xml(std::ostream &os, const std::string &indent = "") const;
	
	// restore from xml stream
	void from_xml(std::istream &is);
	
	// User Interface
	
	// getter and setter for element Type
	inline unsigned char getType() const { return idl_Sensor_msgs_JoyFeedback.type; }
	inline Sensor_msgs_JoyFeedbackCore& setType(const unsigned char &type) { idl_Sensor_msgs_JoyFeedback.type = type; return *this; }
	
	// getter and setter for element Id
	inline unsigned char getId() const { return idl_Sensor_msgs_JoyFeedback.id; }
	inline Sensor_msgs_JoyFeedbackCore& setId(const unsigned char &id) { idl_Sensor_msgs_JoyFeedback.id = id; return *this; }
	
	// getter and setter for element Intensity
	inline float getIntensity() const { return idl_Sensor_msgs_JoyFeedback.intensity; }
	inline Sensor_msgs_JoyFeedbackCore& setIntensity(const float &intensity) { idl_Sensor_msgs_JoyFeedback.intensity = intensity; return *this; }
};

} /* namespace ROSCommon_msgs */
#endif /* ROSCOMMON_MSGS_SENSOR_MSGS_JOYFEEDBACK_CORE_H_ */
