//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------

#include "ROSCommon_msgs/Visualization_msgs_InteractiveMarkerFeedback.hh"

using namespace ROSCommon_msgs;

Visualization_msgs_InteractiveMarkerFeedback::Visualization_msgs_InteractiveMarkerFeedback()
:	Visualization_msgs_InteractiveMarkerFeedbackCore()
{  }


/**
 * Constructor to set all values.
 * NOTE that you have to keep this constructor consistent with the model!
 * Use  at your own choice.
 *
 * The preferred way to set values for initialization is:
 *      CommRepository::MyCommObject obj;
 *      obj.setX(1).setY(2).setZ(3)...;
Visualization_msgs_InteractiveMarkerFeedback::Visualization_msgs_InteractiveMarkerFeedback(const ROSRos_core::Std_msgs_Header &header, const std::string &client_id, const std::string &marker_name, const std::string &control_name, const unsigned char &event_type, const ROSCommon_msgs::Geometry_msgs_Pose &pose, const unsigned int &menu_entry_id, const ROSCommon_msgs::Geometry_msgs_Point &mouse_point, const bool &mouse_point_valid)
:	Visualization_msgs_InteractiveMarkerFeedbackCore() // base constructor sets default values as defined in the model
{
	setHeader(header);
	setClient_id(client_id);
	setMarker_name(marker_name);
	setControl_name(control_name);
	setEvent_type(event_type);
	setPose(pose);
	setMenu_entry_id(menu_entry_id);
	setMouse_point(mouse_point);
	setMouse_point_valid(mouse_point_valid);
}
 */

Visualization_msgs_InteractiveMarkerFeedback::Visualization_msgs_InteractiveMarkerFeedback(const Visualization_msgs_InteractiveMarkerFeedbackCore &visualization_msgs_InteractiveMarkerFeedback)
:	Visualization_msgs_InteractiveMarkerFeedbackCore(visualization_msgs_InteractiveMarkerFeedback)
{  }

Visualization_msgs_InteractiveMarkerFeedback::Visualization_msgs_InteractiveMarkerFeedback(const DATATYPE &visualization_msgs_InteractiveMarkerFeedback)
:	Visualization_msgs_InteractiveMarkerFeedbackCore(visualization_msgs_InteractiveMarkerFeedback)
{  }

Visualization_msgs_InteractiveMarkerFeedback::~Visualization_msgs_InteractiveMarkerFeedback()
{  }
