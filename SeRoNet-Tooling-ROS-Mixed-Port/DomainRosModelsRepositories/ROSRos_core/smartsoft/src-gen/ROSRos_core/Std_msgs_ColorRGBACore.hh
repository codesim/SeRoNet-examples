//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#ifndef ROSROS_CORE_STD_MSGS_COLORRGBA_CORE_H_
#define ROSROS_CORE_STD_MSGS_COLORRGBA_CORE_H_

#include "ROSRos_core/Std_msgs_ColorRGBAData.hh"

#include <iostream>
#include <string>
#include <list>

namespace ROSRos_core {
	
class Std_msgs_ColorRGBACore {
protected:
	// data structure
	ROSRos_coreIDL::Std_msgs_ColorRGBA idl_Std_msgs_ColorRGBA;
	
public:
	// give a publicly accessible type-name for the template parameter IDL
	typedef ROSRos_coreIDL::Std_msgs_ColorRGBA DATATYPE;
	
	#ifdef ENABLE_HASH
		static size_t generateDataHash(const DATATYPE &);
	#endif
	
	static const char* getCompiledHash();
	static void getAllHashValues(std::list<std::string> &hashes);
	static void checkAllHashValues(std::list<std::string> &hashes);
	
	// default constructors
	Std_msgs_ColorRGBACore();
	Std_msgs_ColorRGBACore(const DATATYPE &data);
	// default destructor
	virtual ~Std_msgs_ColorRGBACore();
	
	const DATATYPE& get() const { return idl_Std_msgs_ColorRGBA; }
	operator const DATATYPE&() const { return idl_Std_msgs_ColorRGBA; }
	DATATYPE& set() { return idl_Std_msgs_ColorRGBA; }

	static inline std::string identifier(void) { return "ROSRos_core::Std_msgs_ColorRGBA"; }
	
	// helper method to easily implement output stream in derived classes
	void to_ostream(std::ostream &os = std::cout) const;
	
	// convert to xml stream
	void to_xml(std::ostream &os, const std::string &indent = "") const;
	
	// restore from xml stream
	void from_xml(std::istream &is);
	
	// User Interface
	
	// getter and setter for element R
	inline float getR() const { return idl_Std_msgs_ColorRGBA.r; }
	inline Std_msgs_ColorRGBACore& setR(const float &r) { idl_Std_msgs_ColorRGBA.r = r; return *this; }
	
	// getter and setter for element G
	inline float getG() const { return idl_Std_msgs_ColorRGBA.g; }
	inline Std_msgs_ColorRGBACore& setG(const float &g) { idl_Std_msgs_ColorRGBA.g = g; return *this; }
	
	// getter and setter for element B
	inline float getB() const { return idl_Std_msgs_ColorRGBA.b; }
	inline Std_msgs_ColorRGBACore& setB(const float &b) { idl_Std_msgs_ColorRGBA.b = b; return *this; }
	
	// getter and setter for element A
	inline float getA() const { return idl_Std_msgs_ColorRGBA.a; }
	inline Std_msgs_ColorRGBACore& setA(const float &a) { idl_Std_msgs_ColorRGBA.a = a; return *this; }
};

} /* namespace ROSRos_core */
#endif /* ROSROS_CORE_STD_MSGS_COLORRGBA_CORE_H_ */
