//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#include "ROSRos_core/Std_msgs_MultiArrayLayoutACE.hh"
#include <ace/SString.h>
#include "ROSRos_core/Std_msgs_MultiArrayDimensionACE.hh"

// serialization operator for element Std_msgs_MultiArrayLayout
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const ROSRos_coreIDL::Std_msgs_MultiArrayLayout &data)
{
	ACE_CDR::Boolean good_bit = true;
	// serialize list-element dim
	good_bit = good_bit && cdr << ACE_Utils::truncate_cast<ACE_CDR::ULong>(data.dim.size());
	std::vector<ROSRos_coreIDL::Std_msgs_MultiArrayDimension>::const_iterator data_dimIt;
	for(data_dimIt=data.dim.begin(); data_dimIt!=data.dim.end(); data_dimIt++) {
		good_bit = good_bit && cdr << *data_dimIt;
	}
	// serialize list-element data_offset
	good_bit = good_bit && cdr.write_ulong(data.data_offset);
	
	return good_bit;
}

// de-serialization operator for element Std_msgs_MultiArrayLayout
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, ROSRos_coreIDL::Std_msgs_MultiArrayLayout &data)
{
	ACE_CDR::Boolean good_bit = true;
	// deserialize list-type element dim
	ACE_CDR::ULong data_dimNbr;
	good_bit = good_bit && cdr >> data_dimNbr;
	data.dim.clear();
	ROSRos_coreIDL::Std_msgs_MultiArrayDimension data_dimItem;
	for(ACE_CDR::ULong i=0; i<data_dimNbr; ++i) {
		good_bit = good_bit && cdr >> data_dimItem;
		data.dim.push_back(data_dimItem);
	}
	// deserialize type element data_offset
	good_bit = good_bit && cdr.read_ulong(data.data_offset);
	
	return good_bit;
}

// serialization operator for CommunicationObject Std_msgs_MultiArrayLayout
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const ROSRos_core::Std_msgs_MultiArrayLayout &obj)
{
	return cdr << obj.get();
}

// de-serialization operator for CommunicationObject Std_msgs_MultiArrayLayout
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, ROSRos_core::Std_msgs_MultiArrayLayout &obj)
{
	return cdr >> obj.set();
}
